---
title: House Prices in New York

# Use letters for affiliations
author:
  - name: CC901E2
    affiliation: a
    
address:
  - code: a
    address: The University of Sydney

# Optional: line of arbitrary text with additional information.
# Could be used, for example, to mention the bibliographic info in a post-print.
# If not specified, defaults to "This version was compiled on \today"
date_subtitle: \today

# For footer text  TODO(fold into template, allow free form two-authors)
lead_author_surname: CC901E2

# Place eg a DOI URL or CRAN Package URL here
#doi_footer: "https://cran.r-project.org/package=YourPackage"

# Abstract
abstract: |
    write abstract here
  

# Optional: One or more keywords
keywords:
  - keywords1
  - keywords2
  - keywords3
  - keywords4
  - keywords5
  

# Paper size for the document, values of letter and a4
papersize: letter

# Font size of the document, values of 9pt (default), 10pt, 11pt and 12pt
fontsize: 9pt

# Optional: Force one-column layout, default is two-column
#one_column: true

# Optional: Enables lineno mode, but only if one_column mode is also true
#lineno: true

# Optional: Enable one-sided layout, default is two-sided
#one_sided: true

# Optional: Enable section numbering, default is unnumbered
numbersections: true

# Optional: Specify the depth of section number, default is 5
#secnumdepth: 5

# Optional: Skip inserting final break between acknowledgements, default is false
skip_final_break: true

# Optional: Bibliography 
bibliography: ref

# Customize footer, eg by referencing the vignette
footer_contents: "DATA 2902: Executive Summary Report"

# Produce a pinp document
output:
  pinp::pinp
    

# # Required: Vignette metadata for inclusion in a package.
# vignette: >
#   %\VignetteIndexEntry{YourPackage-vignetteentry}
#   %\VignetteKeywords{YourPackage, r, anotherkeyword}
#   %\VignettePackage{YourPackage}
#   %\VignetteEngine{knitr::rmarkdown}
---

```{r message=FALSE, warning = FALSE, echo = FALSE}
# Hide all the codes
knitr::opts_chunk$set(echo=FALSE)
```

```{r message=FALSE, warning = FALSE}
# Load packages here
library(tidyverse)
library(ggplot2)
library(ggfortify)
library(dplyr)
library(ISLR)
library(sjPlot)
library(leaps)
library(GGally)
library(caret)
library(mplot)
library(lmSubsets)
```

```{r}
# The original data is loaded here
#| output: FALSE
house = read.delim("housing-prices-ge19.txt", 
                    header = TRUE)
# convert data types
house = house %>% mutate (
  Waterfront = as.factor(Waterfront),
  New.Construct = as.factor(New.Construct),
  Central.Air = as.factor(Central.Air),
  Fuel.Type = as.factor(Fuel.Type),
  Heat.Type = as.factor(Heat.Type),
  Sewer.Type = as.factor(Sewer.Type),
  Test = as.factor(Test)
)

# Remove the Test column, because we do not have the metadata
house = house %>%
  select(-Test)
```

```{r}
# backward AIC

# Sample Mean of Price
M0_back = lm(house$Price ~ 1, data = house)
# Price against everything except itself
M1_back = lm(house$Price ~ ., data = house)

# Dropping of variables backwards until lowest AIC is reached
step.back.aic = step(M1_back,
                     direction = "backward",
                     trace = FALSE)

```

```{r}
# Forward AIC

# Sample Mean of Price
M0_fwd = lm(house$Price ~ 1, data = house)
# Price against everything except itself
M1_fwd = lm(house$Price ~ ., data = house)

# Dropping of variables forwards until lowest AIC is reached
step.fwd.aic = step(M0_fwd, scope = list(lower = M0_fwd, upper = M1_fwd),
                     direction = "forward",
                     trace = FALSE)
```

```{r}
# Stable model
stable_model = lm(Price ~ Waterfront + Land.Value + Living.Area + Bathrooms, data = house)
```

# Introduction

Introduction here

To cite, edit the ref.bib document; and use \cite{PeerJ:Rcpp} here.

A house is a basic need for people hence, the Housing Market is an essential sector of the economy and with varying incomes, price is an important consideration when purchasing. The aim of the model is to predict the house prices in New York for future and potential buyers . The model is useful to work out the different elements of a house which have the strongest impact on price for example does the number of bedrooms increase price.

# Data set description

The data set was originally sourced from the mosaic package in R, called Data on houses in Saratoga County, New York, USA (\cite{Data}). It is a large data set with 1,734 rows and 16 columns consisting of 16 variables, 10 numeric and 6 factor variables. It contains information about New York Houses including Price (in USD), Lot size of House(in acres), number of rooms, bedrooms and bathrooms, also contains the type of utilities used in the house (electric heating, hot water heating). However, the test variable was removed from the data set for our analysis because we did not have the metadata to explain the meaning of the variable.

# Analysis {#sec-analysis}

## Backward AIC, Forward AIC, and Exhaustive Search

The backward AIC, forward AIC, and exhaustive search were used to perform multiple regression to find the fitted model. The AIC provides a parameter for model selection that should be optimised for it. For the backward AIC, the model selection process starts with all variables and, then, removes the least informative variables from the fitted model based on how they would affect the AIC value until the lowest overall AIC is reached. For the forward AIC, the model selection starts with no variables other than the dependent variable (here, price), and, then, adds the most informative variables based on the AIC until the fitted model is reached that has the overall lowest AIC score. The exhaustive search was used as a measure of checking the fitted models given by the backward and forward AIC, and it returned the same model (Fig. E). The following fitted model was obtained: Price \~ Lot.Size + Waterfront1 + Age + Land.Value + New.Construct1 + Central.Air1 + Fuel.TypeGas + Fuel.TypeOil + Heat.TypeHot Water + Heat.TypeNone + Living.Area + Bedrooms + Bathrooms + Rooms

## Assumption Checking for Backward AIC and Forward AIC

Four assumptions were checked for both the backwards and forwards AIC. Firstly, the linearity assumption was met, as a linear relationship was shown in scatter plots, and there was also no obvious pattern shown in the residuals vs. fitted values plot (Fig. B1, F1). Secondly, the independence assumption was likely not met. That is because properties within the same area are likely not independent, as they will typically have similar attributes (such as whether they are waterfront). For condominiums specifically, where individual units are typically built similarly and common spaces around specific units are shared, would independence not be ensured. Thirdly, the homoscedasticity assumption was met, as residuals do not seem to be fanning out over the range of the fitted values in the residuals vs. fitted values plot (Fig. B1, F1). Fourthly, for the normality assumption, most of the points are reasonably close to the line on the QQ plot, however, there is some departure from the line at both ends (Fig. B2, F2). Because of the sufficiently large sample size, we can disregard this and assume normality while relying on the central limit theorem to ensure that the inferences are at least approximately valid, so the normality assumption can be assumed to be met as well. Transformations of the initial data were not made, as the numerical variables followed linear relationships (Figure S).

# Model Stability {#sec-stability}

It can be found that the forwards AIC and backwards AIC are not so stable, a stable model are then analysed.

```{r, echo=FALSE}
load("house_main.RData")
```

## Variable inclusion plot

Through the variable inclusion plot (Fig.7), it can be found that `Land.Value`, `Living.Area`, `Bathrooms`, `New.Construct`, `Waterfront` are the five most important variables for predicting `Price`, while the `Sewer.TypePublic` and all levels of `FuelType` do not provide any useful information, since they are included in models by chance.

```{r,echo = FALSE,out.width='90%',fig.width=7.8}
plot(vis.h, which = "vip", interactive = FALSE, legend.position = "NONE")
```

## Model stability plot

According to the model stability plot (shown as below), it appears to be dominant models in models of size **two, three, and five** (including the intercept), as demonstrated by one of the circles being substantially larger than the other circles with models of the same size. Also, the stepwise model of size 14 is not stable because of their small circle size. Finally, it can be found that the simple reversion models is stable, as it is always selected in bootstrap resamples.

```{r, echo = FALSE,out.width='90%',fig.width=7.8}
plot(vis.h, highlight = "Living.Area", which = "boot", interaction = F, max.circle = 10, seed = 2022, legend.position = "bottom")
```

# Model Evaluation and Results



```{r}
# in-sample performance

# r^2 and adjusted r^2 of backward
rsquare_back = summary(step.back.aic)$r.square
rsquare_adj_back = summary(step.back.aic)$adj.r.square

# r^2 and adjusted r^2 of forward
rsquare_fwd = summary(step.fwd.aic)$r.square
rsquare_adj_fwd = summary(step.fwd.aic)$adj.r.square

# r^2 and adjusted r^2 of stable
rsquare_stable = summary(stable_model)$r.square
rsquare_adj_stable = summary(stable_model)$adj.r.square

# make a table
models = c("Backward", "Forward", "Stable")
r_square = c(rsquare_back, rsquare_fwd, rsquare_stable)
r_adj_square = c(rsquare_adj_back, rsquare_adj_fwd, rsquare_adj_stable)

rsquare_table <- data.frame(models, r_square, r_adj_square)

## round into three decimal
rsquare_table = rsquare_table %>%
  mutate_if(is.numeric, 
            round, 
            digits = 3)

```

```{r}
set.seed(2022)

# set 10 folds cross validation
tr_ctrl = trainControl(
    method = "cv", number = 10,
    verboseIter = FALSE
)

# backward
cv_back = train(
        Price ~ Lot.Size + Waterfront + Age + Land.Value + 
                New.Construct + Central.Air + Heat.Type + Living.Area + Bedrooms +                 Bathrooms + Rooms,
        house,
        method = "lm",
        trControl = tr_ctrl
        )

result_back = cv_back$results


# forward
cv_fwd = train(
        Price ~ Living.Area + Land.Value + Bathrooms + 
                Waterfront + New.Construct + Heat.Type + Lot.Size + Central.Air + 
                Age + Rooms + Bedrooms,
        house,
        method = "lm",
        trControl = tr_ctrl
        )

result_fwd = cv_fwd$results

# stable
cv_stable = train(
        Price ~ Waterfront + Land.Value + Living.Area + Bathrooms, house,
        method = "lm",
        trControl = tr_ctrl
        )

result_stable = cv_stable$results

results <-resamples(list(backward = cv_back, forward = cv_fwd, stable = cv_stable))
```

In [Analysis](@sec-analysis) and [Model Stability](@sec-stability) sections, three valid models are found, namely, backward stepwise regression model (backward model), forward stepwise regression model (forward model), and stable model.

In this section, we further compare their in-sample performances and out-of-sample performances.

## In-sample performaces

In-sample perfomances are evaluated by calculating $r^2$, and adjusted $r^2$ values of the three models within the dataset (Table \ref{tab:rsquare}). We found that backward and forward models have the same $r^2$ (`r round(rsquare_back, 3)`) and adjusted $r^2$ values (`r round(rsquare_adj_back, 3)`). The stable model have slightly lower $r^2$ and adjusted $r^2$ values than the two stepwise models, but very similar (`r round(rsquare_stable, 3)` and `r round(rsquare_adj_stable, 3)` respectively).

```{=tex}
\begin{table}[!htbp]
  \begin{center}
    \begin{tabular}{ |c|c|c| } 
      \hline
      Models & $r^2$ & Adjusted $r^2$ \\ 
      \hline
      Backward & `r round(rsquare_back, 3)` & `r round(rsquare_adj_back, 3)` \\ 
      \hline
      Forward & `r round(rsquare_fwd, 3)` & `r round(rsquare_adj_fwd, 3)` \\ 
      \hline
      Stable & `r round(rsquare_stable, 3)` & `r round(rsquare_adj_stable, 3)` \\ 
      \hline
    \end{tabular}
    \caption{$r^2$ and adjusted $r^2$}
    \label{tab:rsquare}
  \end{center}
\end{table}
```
## Out-of-sample performances

A $10$-fold cross validation shows that backward and forward models have slightly lower average MAE (Mean Absolute Error) and RMSE (Root Mean Square Error) than the stable model (Table \ref{tab:error}).

```{=tex}
\begin{table}[!htbp]
  \begin{center}
    \begin{tabular}{ |c|c|c| } 
      \hline
      Models & RMSE & MAE \\ 
      \hline
      Backward & `r format(result_back[1,2], nsmall = 3)` & `r format(result_back[1,4], nsmall = 3)` \\ 
      \hline
      Forward & `r format(result_fwd[1,2], nsmall = 3)` & `r format(result_fwd[1,4], nsmall = 3)` \\ 
      \hline
      Stable & `r format(result_stable[1,2], nsmall = 3)` & `r format(result_stable[1,4], nsmall = 3)` \\ 
      \hline
    \end{tabular}
    \caption{RMSE and MAE}
    \label{tab:error}
  \end{center}
\end{table}
```
Figures (Figure xxxxxxx, Figure xxxxxxxx) of RMSE and MAE further confirm it, though majority parts of the range of RMSE and MAE among the three models overlap.

```{r fig.cap="\\label{fig:rmse}RMSE", out.width = "150px"}
# Figures (Figure \ref{fig:rmse}, Figure \ref{fig:mae})
# ggplot(results, metrics = "RMSE") +
#   labs(y = "")
```

```{r fig.cap="\\label{fig:mae}MAE", out.width = "150px"}
# ggplot(results, metrics = "MAE") +
#   labs(y = "")
```

# Discussion, Conclusion, and Limitation

## Discussion

In-sample performance evaluation indicates that the backward and forward models explain the data slightly more than the stable model due to their higher $r^2$ and adjusted $r^2$ values.

Out-of-sample performance evaluation further shows that the backward and forward models may be slightly more accurate than the stable model due to their lower RMSE and MAE values.

However, as mentioned in the [Model Stability](@sec-stability) section, the backward and forward models with $14$ parameters are not stable. In comparison, the stable model is selected in $78\%$ of bootstrap resamples.

Meanwhile, though the stable model has higher $r^2$ and adjusted $r^2$ values than the backward and forward models, it still manages to explain approximately $`r round(rsquare_stable*100, 2)` \%$ (according to its $r^2$ value) or $`r round(rsquare_adj_stable*100, 2)` \%$ (according to its adjusted $r^2$ value) of the total variation in the house price data. This is reasonable. Furthermore, the stable model does not have much higher error rates than the backward and forward models.

## Conclution

Balancing stability, in-sample performances and out-of-sample performances, we conclude that the stable model may be the best among the four models.

## Limitation

As mentioned, when compared to the backward and forward models, the stable model is more stable. However, it has relatively slightly lower $r^2$ and adjusted $r^2$ values, as well as relatively higher error rates (RMSE and MAE). To some extend, it is a compromise between stability and accuracy.

If more information about the dataset is provided, a domain knowledge expert may make better judgement on which model to choose.
